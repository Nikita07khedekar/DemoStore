<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    <SolidColorBrush x:Key="HoverBackgroundColor" Color="#FBB040"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="Black"/>
    <SolidColorBrush x:Key="HoverForegroundColor" Color="White"/>
    <SolidColorBrush x:Key="LightForegroundColor" Color="DimGray"/>


    <!--Normal Button Style-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Padding" Value="20,0,0,5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource HoverForegroundColor}" >
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>

                    </Border>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hover Button Style -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundColor}"/>
                
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="LightYellow"/>

            </Trigger>
        </Style.Triggers>
        
    </Style>


    <!--Menu Button Icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <!--Menu Button Text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundColor}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Key="removeIcon" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>

    </Style>

    <Style x:Key="trashIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Margin" Value="0,0,20,0"/>

    </Style>


    <!--Control Button Style-->
    <Style x:Key="controlButton" TargetType="Button">
        <Setter Property="Width" Value="35" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hover Button Style -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Honeydew"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </Trigger>

        </Style.Triggers>

    </Style>

    <!--control Button Icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <!--control Button Text-->
    <Style x:Key="controlButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>






    <!--Icon Button Style-->
    <Style x:Key="iconButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource LightForegroundColor}" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hover Button Style -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Honeydew"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>

    </Style>

    <!--Icon Button Icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>


</ResourceDictionary>